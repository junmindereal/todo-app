{"version":3,"sources":["components/todoList.jsx","components/todoForm.jsx","index.js","App.js"],"names":["TodoList","this","props","classes","todos","handleChecked","handleDelete","List","map","todo","index","ListItem","dense","button","role","undefined","key","onClick","className","even","checked","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","color","ListItemText","primary","text","strikeThrough","ListItemSecondaryAction","IconButton","Component","withStyles","theme","textDecoration","backgroundColor","opacity","TodoForm","state","data","input","handleChange","target","name","value","setState","localStorage","setItem","JSON","stringify","handleSubmit","e","preventDefault","id","uuid","push","removeItem","filter","t","todosInStorage","getItem","parse","inputInStorage","form","autoComplete","onSubmit","Box","display","TextField","placeholder","variant","textField","onChange","Button","size","disableElevation","type","disabled","length","marginBottom","width","marginRight","ReactDOM","render","Fragment","CssBaseline","Container","maxWidth","my","Typography","component","gutterBottom","document","querySelector"],"mappings":"+YAuBMA,E,iLACM,IAAD,EACiDC,KAAKC,MAArDC,EADD,EACCA,QAASC,EADV,EACUA,MAAOC,EADjB,EACiBA,cAAeC,EADhC,EACgCA,aAEvC,OACE,kBAACC,EAAA,EAAD,KACGH,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACT,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,QAAM,EACNC,UAAMC,EACNC,IAAKN,EACLO,QAAS,kBAAMZ,EAAcK,IAC7BQ,UAAS,UAAKR,EAAQ,IAAM,EAAIP,EAAQgB,KAAO,KAAtC,aACU,IAAjBV,EAAKW,QAAmBjB,EAAQiB,QAAU,OAG5C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLC,UAAW,EACXC,eAAa,EACbC,MAAM,UACNN,QAASX,EAAKW,WAGlB,kBAACO,EAAA,EAAD,CACEC,QAASnB,EAAKoB,KACdX,WAA4B,IAAjBT,EAAKW,QAAmBjB,EAAQ2B,cAAgB,OAE7D,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACET,KAAK,MACLN,QAAS,kBAAMX,EAAaG,IAC5BS,WAA4B,IAAjBT,EAAKW,QAAmBjB,EAAQiB,QAAU,MAErD,kBAAC,IAAD,iB,GApCOa,aA8CRC,eA1DA,SAAAC,GAAK,MAAK,CACvBL,cAAe,CACbM,eAAgB,gBAElBjB,KAAM,CACJkB,gBAAiB,uBAEnBjB,QAAS,CACPkB,QAAS,OAkDEJ,CAAmBlC,GChD5BuC,E,2MACJC,MAAQ,CACNC,KAAM,CACJC,MAAO,IAETtC,MAAO,I,EAeTuC,aAAe,YAAwB,IAAbD,EAAY,EAApBE,OACVH,EAAI,eAAQ,EAAKD,MAAMC,MAC7BA,EAAKC,EAAMG,MAAQH,EAAMI,MACzB,EAAKC,SAAS,CAAEN,SAEhBO,aAAaC,QAAQ,QAASC,KAAKC,UAAUV,K,EAG/CW,aAAe,SAAAC,GACbA,EAAEC,iBACF,IAAMb,EAAI,eAAQ,EAAKD,MAAMC,MACvBrC,EAAK,YAAO,EAAKoC,MAAMpC,OAEvBK,EAAO,CACX8C,GAAIC,MACJ3B,KAAMY,EAAKC,MACXtB,SAAS,GAEXhB,EAAMqD,KAAKhD,GAEXgC,EAAKC,MAAQ,GACbM,aAAaU,WAAW,SAExB,EAAKX,SAAS,CAAEN,OAAMrC,UAEtB4C,aAAaC,QAAQ,QAASC,KAAKC,UAAU/C,K,EAG/CC,cAAgB,SAAAK,GACd,IAAMN,EAAK,YAAO,EAAKoC,MAAMpC,QACJ,IAAzBA,EAAMM,GAAOU,QACRhB,EAAMM,GAAOU,SAAU,EACvBhB,EAAMM,GAAOU,SAAU,EAC5B,EAAK2B,SAAS,CAAE3C,UAEhB4C,aAAaC,QAAQ,QAASC,KAAKC,UAAU/C,K,EAG/CE,aAAe,SAAAG,GACb,IACML,EADgB,EAAKoC,MAAMpC,MACLuD,QAAO,SAAAC,GAAC,OAAIA,EAAEL,KAAO9C,EAAK8C,MACtD,EAAKR,SAAS,CAAE3C,UAEhB4C,aAAaC,QAAQ,QAASC,KAAKC,UAAU/C,K,mFAtD7C,IAAMyD,EAAiBb,aAAac,QAAQ,SACtC1D,EAAQ8C,KAAKa,MAAMF,GAEnBG,EAAiBhB,aAAac,QAAQ,SACtCrB,EAAOS,KAAKa,MAAMC,GAIxB,OAFI5D,GAAOH,KAAK8C,SAAS,CAAE3C,UACvBqC,GAAMxC,KAAK8C,SAAS,CAAEN,SACnB,O,+BAiDC,IACAtC,EAAYF,KAAKC,MAAjBC,QADD,EAEiBF,KAAKuC,MAArBC,EAFD,EAECA,KAAMrC,EAFP,EAEOA,MAEd,OACE,kBAAC,WAAD,KACE,0BACEc,UAAWf,EAAQ8D,KACnBC,aAAa,MACbC,SAAUlE,KAAKmD,cAEf,kBAACgB,EAAA,EAAD,CAAKC,QAAQ,QACX,kBAACC,EAAA,EAAD,CACEzB,KAAK,QACL0B,YAAY,mBACZC,QAAQ,WACRtD,UAAWf,EAAQsE,UACnBC,SAAUzE,KAAK0C,aACfG,MAAOL,EAAKC,QAEd,kBAACiC,EAAA,EAAD,CACEH,QAAQ,YACRI,KAAK,QACLlD,MAAM,UACNmD,kBAAgB,EAChB3D,UAAWf,EAAQU,OACnBiE,KAAK,SACLC,SAAgC,IAAtBtC,EAAKC,MAAMsC,QAPvB,SAaJ,kBAAC,EAAD,CACE5E,MAAOA,EACPC,cAAeJ,KAAKI,cACpBC,aAAcL,KAAKK,oB,GAtGN2B,aA6GRC,eA1HA,SAAAC,GAAK,MAAK,CACvB8B,KAAM,CACJgB,aAAc,IAEhBR,UAAW,CACTS,MAAO,OACPC,YAAa,IAEftE,OAAQ,CACNqE,MAAO,QAiHIhD,CAAmBK,GC7HlC6C,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,mBCFW,WACb,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACrB,EAAA,EAAD,CAAKsB,GAAI,GACP,kBAACC,EAAA,EAAD,CAAYnB,QAAQ,KAAKoB,UAAU,KAAKC,cAAY,GAApD,gBAGA,kBAACF,EAAA,EAAD,CAAYC,UAAU,IAAIC,cAAY,GAAtC,cAGA,kBAAC,EAAD,UDRJ,OAEFC,SAASC,cAAc,Y","file":"static/js/main.5930d357.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst styles = theme => ({\n  strikeThrough: {\n    textDecoration: \"line-through\"\n  },\n  even: {\n    backgroundColor: \"rgba(0, 0, 0, 0.02)\"\n  },\n  checked: {\n    opacity: 0.4\n  }\n});\n\nclass TodoList extends Component {\n  render() {\n    const { classes, todos, handleChecked, handleDelete } = this.props;\n\n    return (\n      <List>\n        {todos.map((todo, index) => (\n          <ListItem\n            dense\n            button\n            role={undefined}\n            key={index}\n            onClick={() => handleChecked(index)}\n            className={`${index % 2 === 0 ? classes.even : null} ${\n              todo.checked === true ? classes.checked : null\n            }`}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                tabIndex={-1}\n                disableRipple\n                color=\"primary\"\n                checked={todo.checked}\n              ></Checkbox>\n            </ListItemIcon>\n            <ListItemText\n              primary={todo.text}\n              className={todo.checked === true ? classes.strikeThrough : null}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                onClick={() => handleDelete(todo)}\n                className={todo.checked === true ? classes.checked : null}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default withStyles(styles)(TodoList);\n","import React, { Component, Fragment } from \"react\";\nimport uuid from \"uuid/v1\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport TodoList from \"./todoList\";\n\nconst styles = theme => ({\n  form: {\n    marginBottom: 36\n  },\n  textField: {\n    width: \"100%\",\n    marginRight: 12\n  },\n  button: {\n    width: 120\n  }\n});\n\nclass TodoForm extends Component {\n  state = {\n    data: {\n      input: \"\"\n    },\n    todos: []\n  };\n\n  componentDidMount() {\n    const todosInStorage = localStorage.getItem(\"todos\");\n    const todos = JSON.parse(todosInStorage);\n\n    const inputInStorage = localStorage.getItem(\"input\");\n    const data = JSON.parse(inputInStorage);\n\n    if (todos) this.setState({ todos });\n    if (data) this.setState({ data });\n    return null;\n  }\n\n  handleChange = ({ target: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data });\n\n    localStorage.setItem(\"input\", JSON.stringify(data));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const data = { ...this.state.data };\n    const todos = [...this.state.todos];\n\n    const todo = {\n      id: uuid(),\n      text: data.input,\n      checked: false\n    };\n    todos.push(todo);\n\n    data.input = \"\";\n    localStorage.removeItem(\"input\");\n\n    this.setState({ data, todos });\n\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  handleChecked = index => {\n    const todos = [...this.state.todos];\n    todos[index].checked === false\n      ? (todos[index].checked = true)\n      : (todos[index].checked = false);\n    this.setState({ todos });\n\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  handleDelete = todo => {\n    const originalTodos = this.state.todos;\n    const todos = originalTodos.filter(t => t.id !== todo.id);\n    this.setState({ todos });\n\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { data, todos } = this.state;\n\n    return (\n      <Fragment>\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <Box display=\"flex\">\n            <TextField\n              name=\"input\"\n              placeholder=\"E.g. Adopt a dog\"\n              variant=\"outlined\"\n              className={classes.textField}\n              onChange={this.handleChange}\n              value={data.input}\n            />\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              disableElevation\n              className={classes.button}\n              type=\"submit\"\n              disabled={data.input.length === 0}\n            >\n              Add\n            </Button>\n          </Box>\n        </form>\n        <TodoList\n          todos={todos}\n          handleChecked={this.handleChecked}\n          handleDelete={this.handleDelete}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(TodoForm);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.Fragment>\n    <CssBaseline />\n    <App />\n  </React.Fragment>,\n  document.querySelector(\"#root\")\n);\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport TodoForm from \"./components/todoForm\";\n\nexport default function App() {\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Mylist Cyrus\n        </Typography>\n        <Typography component=\"p\" gutterBottom>\n          Add a todo\n        </Typography>\n        <TodoForm />\n      </Box>\n    </Container>\n  );\n}\n"],"sourceRoot":""}